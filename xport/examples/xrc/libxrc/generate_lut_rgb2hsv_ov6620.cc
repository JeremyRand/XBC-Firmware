#include <stdio.h>
#include <string.h>

#include "xrc_lut.h"

bool header= false;

void dump_lut(char *name, unsigned char *lut)
{
  if (header) printf("extern const unsigned char %s[]", name);
  else printf("const unsigned char %s[32768]", name);
  if (header) {
    printf(";\n");
    return;
  }
  printf("={\n");
  for (int i= 0; i< 32768; i++) {
    printf("%3d,", lut[i]);
    if ((i+1)%32 == 0) printf("\n");
    if ((i+1)%(32*32) == 0) printf("\n");
  }
  printf("};\n");
}

int main(int argc, char **argv)
{
  unsigned char lut_rgb2h_ov6620_555[32768];
  unsigned char lut_rgb2s_ov6620_555[32768];
  unsigned char lut_rgb2v_ov6620_555[32768];
  if (argc == 2 && !strcmp(argv[1], "--header")) header= true;
  printf("// Do not edit\n");
  printf("// Automatically generated by generate_lut_rgb2hsv_ov6620\n");

  if (header) {
    printf("#ifndef LUT_RGB2HSV_OV6620_H\n");
    printf("#define LUT_RGB2HSV_OV6620_H\n");
  } else {
    printf("#include \"lut_rgb2hsv_ov6620.h\"\n");
  }
  
  for (int r= 0; r< 32; r++) {
    for (int b= 0; b< 32; b++) {
      for (int g= 0; g< 32; g++) {
        int idx= (r<<10)+(b<<5)+g;
        unsigned short h;
        unsigned char s,v;
        SlowRgbToHsvOV6620_555(r,g,b,h,s,v);
        lut_rgb2h_ov6620_555[idx]= (h == (unsigned short)-1) ? 0xff : h/2;
        lut_rgb2s_ov6620_555[idx]= s;
        lut_rgb2v_ov6620_555[idx]= v;
      }
    }
  }
  if (header) {
    printf("extern int lut_rgb2hsv_ov6620_555_valid;\n");
  } else {
    printf("int lut_rgb2hsv_ov6620_555_valid=1;\n");
  }

  dump_lut("lut_rgb2h_ov6620_555", lut_rgb2h_ov6620_555); 
  dump_lut("lut_rgb2s_ov6620_555", lut_rgb2s_ov6620_555); 
  dump_lut("lut_rgb2v_ov6620_555", lut_rgb2v_ov6620_555);
  if (header) {
    printf("#endif\n");
  }
}
